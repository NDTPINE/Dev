//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QuanLyCuaHangApp
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class QLCuaHangAppEntities : DbContext
    {
        public QLCuaHangAppEntities()
            : base("name=QLCuaHangAppEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Customer> Customers { get; set; }
        public virtual DbSet<Good> Goods { get; set; }
        public virtual DbSet<InputInfo> InputInfoes { get; set; }
        public virtual DbSet<Input> Inputs { get; set; }
        public virtual DbSet<OutputInfo> OutputInfoes { get; set; }
        public virtual DbSet<Output> Outputs { get; set; }
        public virtual DbSet<Staff> Staffs { get; set; }
        public virtual DbSet<Suplier> Supliers { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<v_Input> v_Input { get; set; }
        public virtual DbSet<v_ListInput> v_ListInput { get; set; }
        public virtual DbSet<v_ListOutput> v_ListOutput { get; set; }
        public virtual DbSet<v_Output> v_Output { get; set; }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int Sp_Delete_Customer(string customer)
        {
            var customerParameter = customer != null ?
                new ObjectParameter("Customer", customer) :
                new ObjectParameter("Customer", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Delete_Customer", customerParameter);
        }
    
        public virtual int Sp_Delete_Good(string good)
        {
            var goodParameter = good != null ?
                new ObjectParameter("Good", good) :
                new ObjectParameter("Good", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Delete_Good", goodParameter);
        }
    
        public virtual int Sp_Delete_Input(string input)
        {
            var inputParameter = input != null ?
                new ObjectParameter("Input", input) :
                new ObjectParameter("Input", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Delete_Input", inputParameter);
        }
    
        public virtual int Sp_Delete_InputInfo(string inputInfos, string goods)
        {
            var inputInfosParameter = inputInfos != null ?
                new ObjectParameter("InputInfos", inputInfos) :
                new ObjectParameter("InputInfos", typeof(string));
    
            var goodsParameter = goods != null ?
                new ObjectParameter("Goods", goods) :
                new ObjectParameter("Goods", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Delete_InputInfo", inputInfosParameter, goodsParameter);
        }
    
        public virtual int Sp_Delete_Output(string output)
        {
            var outputParameter = output != null ?
                new ObjectParameter("Output", output) :
                new ObjectParameter("Output", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Delete_Output", outputParameter);
        }
    
        public virtual int Sp_Delete_OutputInfo(string outputInfos, string goods)
        {
            var outputInfosParameter = outputInfos != null ?
                new ObjectParameter("OutputInfos", outputInfos) :
                new ObjectParameter("OutputInfos", typeof(string));
    
            var goodsParameter = goods != null ?
                new ObjectParameter("Goods", goods) :
                new ObjectParameter("Goods", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Delete_OutputInfo", outputInfosParameter, goodsParameter);
        }
    
        public virtual int Sp_Delete_Staff(string staff)
        {
            var staffParameter = staff != null ?
                new ObjectParameter("Staff", staff) :
                new ObjectParameter("Staff", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Delete_Staff", staffParameter);
        }
    
        public virtual int Sp_Delete_Suplier(string suplier)
        {
            var suplierParameter = suplier != null ?
                new ObjectParameter("Suplier", suplier) :
                new ObjectParameter("Suplier", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Delete_Suplier", suplierParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int Sp_Insert_Customer(string customer, string nameCus, string adress, string phone, string email)
        {
            var customerParameter = customer != null ?
                new ObjectParameter("Customer", customer) :
                new ObjectParameter("Customer", typeof(string));
    
            var nameCusParameter = nameCus != null ?
                new ObjectParameter("NameCus", nameCus) :
                new ObjectParameter("NameCus", typeof(string));
    
            var adressParameter = adress != null ?
                new ObjectParameter("Adress", adress) :
                new ObjectParameter("Adress", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Insert_Customer", customerParameter, nameCusParameter, adressParameter, phoneParameter, emailParameter);
        }
    
        public virtual int Sp_Insert_Good(string good, string nameGoo, string producer, Nullable<int> numbers, string warranty, string unit, string statuss)
        {
            var goodParameter = good != null ?
                new ObjectParameter("Good", good) :
                new ObjectParameter("Good", typeof(string));
    
            var nameGooParameter = nameGoo != null ?
                new ObjectParameter("NameGoo", nameGoo) :
                new ObjectParameter("NameGoo", typeof(string));
    
            var producerParameter = producer != null ?
                new ObjectParameter("Producer", producer) :
                new ObjectParameter("Producer", typeof(string));
    
            var numbersParameter = numbers.HasValue ?
                new ObjectParameter("Numbers", numbers) :
                new ObjectParameter("Numbers", typeof(int));
    
            var warrantyParameter = warranty != null ?
                new ObjectParameter("Warranty", warranty) :
                new ObjectParameter("Warranty", typeof(string));
    
            var unitParameter = unit != null ?
                new ObjectParameter("Unit", unit) :
                new ObjectParameter("Unit", typeof(string));
    
            var statussParameter = statuss != null ?
                new ObjectParameter("Statuss", statuss) :
                new ObjectParameter("Statuss", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Insert_Good", goodParameter, nameGooParameter, producerParameter, numbersParameter, warrantyParameter, unitParameter, statussParameter);
        }
    
        public virtual int Sp_Insert_Input(string input, Nullable<System.DateTime> dateIn, string staffs, string supliers)
        {
            var inputParameter = input != null ?
                new ObjectParameter("Input", input) :
                new ObjectParameter("Input", typeof(string));
    
            var dateInParameter = dateIn.HasValue ?
                new ObjectParameter("DateIn", dateIn) :
                new ObjectParameter("DateIn", typeof(System.DateTime));
    
            var staffsParameter = staffs != null ?
                new ObjectParameter("Staffs", staffs) :
                new ObjectParameter("Staffs", typeof(string));
    
            var supliersParameter = supliers != null ?
                new ObjectParameter("Supliers", supliers) :
                new ObjectParameter("Supliers", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Insert_Input", inputParameter, dateInParameter, staffsParameter, supliersParameter);
        }
    
        public virtual int Sp_Insert_InputInfo(string inputInfos, string goods, Nullable<int> numberInput, Nullable<float> pricesInput, Nullable<float> tax)
        {
            var inputInfosParameter = inputInfos != null ?
                new ObjectParameter("InputInfos", inputInfos) :
                new ObjectParameter("InputInfos", typeof(string));
    
            var goodsParameter = goods != null ?
                new ObjectParameter("Goods", goods) :
                new ObjectParameter("Goods", typeof(string));
    
            var numberInputParameter = numberInput.HasValue ?
                new ObjectParameter("NumberInput", numberInput) :
                new ObjectParameter("NumberInput", typeof(int));
    
            var pricesInputParameter = pricesInput.HasValue ?
                new ObjectParameter("PricesInput", pricesInput) :
                new ObjectParameter("PricesInput", typeof(float));
    
            var taxParameter = tax.HasValue ?
                new ObjectParameter("Tax", tax) :
                new ObjectParameter("Tax", typeof(float));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Insert_InputInfo", inputInfosParameter, goodsParameter, numberInputParameter, pricesInputParameter, taxParameter);
        }
    
        public virtual int Sp_Insert_Output(string output, Nullable<System.DateTime> dateOut, string staffs, string customers)
        {
            var outputParameter = output != null ?
                new ObjectParameter("Output", output) :
                new ObjectParameter("Output", typeof(string));
    
            var dateOutParameter = dateOut.HasValue ?
                new ObjectParameter("DateOut", dateOut) :
                new ObjectParameter("DateOut", typeof(System.DateTime));
    
            var staffsParameter = staffs != null ?
                new ObjectParameter("Staffs", staffs) :
                new ObjectParameter("Staffs", typeof(string));
    
            var customersParameter = customers != null ?
                new ObjectParameter("Customers", customers) :
                new ObjectParameter("Customers", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Insert_Output", outputParameter, dateOutParameter, staffsParameter, customersParameter);
        }
    
        public virtual int Sp_Insert_OutputInfo(string outputInfos, string goods, Nullable<int> numberOutput, Nullable<float> pricesOutput, Nullable<float> tax)
        {
            var outputInfosParameter = outputInfos != null ?
                new ObjectParameter("OutputInfos", outputInfos) :
                new ObjectParameter("OutputInfos", typeof(string));
    
            var goodsParameter = goods != null ?
                new ObjectParameter("Goods", goods) :
                new ObjectParameter("Goods", typeof(string));
    
            var numberOutputParameter = numberOutput.HasValue ?
                new ObjectParameter("NumberOutput", numberOutput) :
                new ObjectParameter("NumberOutput", typeof(int));
    
            var pricesOutputParameter = pricesOutput.HasValue ?
                new ObjectParameter("PricesOutput", pricesOutput) :
                new ObjectParameter("PricesOutput", typeof(float));
    
            var taxParameter = tax.HasValue ?
                new ObjectParameter("Tax", tax) :
                new ObjectParameter("Tax", typeof(float));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Insert_OutputInfo", outputInfosParameter, goodsParameter, numberOutputParameter, pricesOutputParameter, taxParameter);
        }
    
        public virtual int Sp_Insert_Staff(string staff, string nameSta, Nullable<int> yearBirth, string sex, string addressSta, string phone, string position, string salary)
        {
            var staffParameter = staff != null ?
                new ObjectParameter("Staff", staff) :
                new ObjectParameter("Staff", typeof(string));
    
            var nameStaParameter = nameSta != null ?
                new ObjectParameter("NameSta", nameSta) :
                new ObjectParameter("NameSta", typeof(string));
    
            var yearBirthParameter = yearBirth.HasValue ?
                new ObjectParameter("YearBirth", yearBirth) :
                new ObjectParameter("YearBirth", typeof(int));
    
            var sexParameter = sex != null ?
                new ObjectParameter("Sex", sex) :
                new ObjectParameter("Sex", typeof(string));
    
            var addressStaParameter = addressSta != null ?
                new ObjectParameter("AddressSta", addressSta) :
                new ObjectParameter("AddressSta", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var positionParameter = position != null ?
                new ObjectParameter("Position", position) :
                new ObjectParameter("Position", typeof(string));
    
            var salaryParameter = salary != null ?
                new ObjectParameter("Salary", salary) :
                new ObjectParameter("Salary", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Insert_Staff", staffParameter, nameStaParameter, yearBirthParameter, sexParameter, addressStaParameter, phoneParameter, positionParameter, salaryParameter);
        }
    
        public virtual int Sp_Insert_Suplier(string suplier, string nameSup, string addressSup, string phone, string email)
        {
            var suplierParameter = suplier != null ?
                new ObjectParameter("Suplier", suplier) :
                new ObjectParameter("Suplier", typeof(string));
    
            var nameSupParameter = nameSup != null ?
                new ObjectParameter("NameSup", nameSup) :
                new ObjectParameter("NameSup", typeof(string));
    
            var addressSupParameter = addressSup != null ?
                new ObjectParameter("AddressSup", addressSup) :
                new ObjectParameter("AddressSup", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Insert_Suplier", suplierParameter, nameSupParameter, addressSupParameter, phoneParameter, emailParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int Sp_Update_Customer(string customer, string nameCus, string adress, string phone, string email)
        {
            var customerParameter = customer != null ?
                new ObjectParameter("Customer", customer) :
                new ObjectParameter("Customer", typeof(string));
    
            var nameCusParameter = nameCus != null ?
                new ObjectParameter("NameCus", nameCus) :
                new ObjectParameter("NameCus", typeof(string));
    
            var adressParameter = adress != null ?
                new ObjectParameter("Adress", adress) :
                new ObjectParameter("Adress", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_Customer", customerParameter, nameCusParameter, adressParameter, phoneParameter, emailParameter);
        }
    
        public virtual int Sp_Update_Good(string good, string nameGoo, string producer, Nullable<int> numbers, string warranty, string unit, string statuss)
        {
            var goodParameter = good != null ?
                new ObjectParameter("Good", good) :
                new ObjectParameter("Good", typeof(string));
    
            var nameGooParameter = nameGoo != null ?
                new ObjectParameter("NameGoo", nameGoo) :
                new ObjectParameter("NameGoo", typeof(string));
    
            var producerParameter = producer != null ?
                new ObjectParameter("Producer", producer) :
                new ObjectParameter("Producer", typeof(string));
    
            var numbersParameter = numbers.HasValue ?
                new ObjectParameter("Numbers", numbers) :
                new ObjectParameter("Numbers", typeof(int));
    
            var warrantyParameter = warranty != null ?
                new ObjectParameter("Warranty", warranty) :
                new ObjectParameter("Warranty", typeof(string));
    
            var unitParameter = unit != null ?
                new ObjectParameter("Unit", unit) :
                new ObjectParameter("Unit", typeof(string));
    
            var statussParameter = statuss != null ?
                new ObjectParameter("Statuss", statuss) :
                new ObjectParameter("Statuss", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_Good", goodParameter, nameGooParameter, producerParameter, numbersParameter, warrantyParameter, unitParameter, statussParameter);
        }
    
        public virtual int Sp_Update_Input(string input, Nullable<System.DateTime> dateIn, string staffs, string supliers)
        {
            var inputParameter = input != null ?
                new ObjectParameter("Input", input) :
                new ObjectParameter("Input", typeof(string));
    
            var dateInParameter = dateIn.HasValue ?
                new ObjectParameter("DateIn", dateIn) :
                new ObjectParameter("DateIn", typeof(System.DateTime));
    
            var staffsParameter = staffs != null ?
                new ObjectParameter("Staffs", staffs) :
                new ObjectParameter("Staffs", typeof(string));
    
            var supliersParameter = supliers != null ?
                new ObjectParameter("Supliers", supliers) :
                new ObjectParameter("Supliers", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_Input", inputParameter, dateInParameter, staffsParameter, supliersParameter);
        }
    
        public virtual int Sp_Update_InputInfo(string inputInfos, string goods, Nullable<int> numberInput, Nullable<float> pricesInput, Nullable<float> tax)
        {
            var inputInfosParameter = inputInfos != null ?
                new ObjectParameter("InputInfos", inputInfos) :
                new ObjectParameter("InputInfos", typeof(string));
    
            var goodsParameter = goods != null ?
                new ObjectParameter("Goods", goods) :
                new ObjectParameter("Goods", typeof(string));
    
            var numberInputParameter = numberInput.HasValue ?
                new ObjectParameter("NumberInput", numberInput) :
                new ObjectParameter("NumberInput", typeof(int));
    
            var pricesInputParameter = pricesInput.HasValue ?
                new ObjectParameter("PricesInput", pricesInput) :
                new ObjectParameter("PricesInput", typeof(float));
    
            var taxParameter = tax.HasValue ?
                new ObjectParameter("Tax", tax) :
                new ObjectParameter("Tax", typeof(float));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_InputInfo", inputInfosParameter, goodsParameter, numberInputParameter, pricesInputParameter, taxParameter);
        }
    
        public virtual int Sp_Update_Output(string output, Nullable<System.DateTime> dateOut, string staffs, string customers)
        {
            var outputParameter = output != null ?
                new ObjectParameter("Output", output) :
                new ObjectParameter("Output", typeof(string));
    
            var dateOutParameter = dateOut.HasValue ?
                new ObjectParameter("DateOut", dateOut) :
                new ObjectParameter("DateOut", typeof(System.DateTime));
    
            var staffsParameter = staffs != null ?
                new ObjectParameter("Staffs", staffs) :
                new ObjectParameter("Staffs", typeof(string));
    
            var customersParameter = customers != null ?
                new ObjectParameter("Customers", customers) :
                new ObjectParameter("Customers", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_Output", outputParameter, dateOutParameter, staffsParameter, customersParameter);
        }
    
        public virtual int Sp_Update_OutputInfo(string outputInfos, string goods, Nullable<int> numberOutput, Nullable<float> pricesOutput, Nullable<float> tax)
        {
            var outputInfosParameter = outputInfos != null ?
                new ObjectParameter("OutputInfos", outputInfos) :
                new ObjectParameter("OutputInfos", typeof(string));
    
            var goodsParameter = goods != null ?
                new ObjectParameter("Goods", goods) :
                new ObjectParameter("Goods", typeof(string));
    
            var numberOutputParameter = numberOutput.HasValue ?
                new ObjectParameter("NumberOutput", numberOutput) :
                new ObjectParameter("NumberOutput", typeof(int));
    
            var pricesOutputParameter = pricesOutput.HasValue ?
                new ObjectParameter("PricesOutput", pricesOutput) :
                new ObjectParameter("PricesOutput", typeof(float));
    
            var taxParameter = tax.HasValue ?
                new ObjectParameter("Tax", tax) :
                new ObjectParameter("Tax", typeof(float));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_OutputInfo", outputInfosParameter, goodsParameter, numberOutputParameter, pricesOutputParameter, taxParameter);
        }
    
        public virtual int Sp_Update_Staff(string staff, string nameSta, Nullable<int> yearBirth, string sex, string addressSta, string phone, string position, string salary)
        {
            var staffParameter = staff != null ?
                new ObjectParameter("Staff", staff) :
                new ObjectParameter("Staff", typeof(string));
    
            var nameStaParameter = nameSta != null ?
                new ObjectParameter("NameSta", nameSta) :
                new ObjectParameter("NameSta", typeof(string));
    
            var yearBirthParameter = yearBirth.HasValue ?
                new ObjectParameter("YearBirth", yearBirth) :
                new ObjectParameter("YearBirth", typeof(int));
    
            var sexParameter = sex != null ?
                new ObjectParameter("Sex", sex) :
                new ObjectParameter("Sex", typeof(string));
    
            var addressStaParameter = addressSta != null ?
                new ObjectParameter("AddressSta", addressSta) :
                new ObjectParameter("AddressSta", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var positionParameter = position != null ?
                new ObjectParameter("Position", position) :
                new ObjectParameter("Position", typeof(string));
    
            var salaryParameter = salary != null ?
                new ObjectParameter("Salary", salary) :
                new ObjectParameter("Salary", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_Staff", staffParameter, nameStaParameter, yearBirthParameter, sexParameter, addressStaParameter, phoneParameter, positionParameter, salaryParameter);
        }
    
        public virtual int Sp_Update_Suplier(string suplier, string nameSup, string addressSup, string phone, string email)
        {
            var suplierParameter = suplier != null ?
                new ObjectParameter("Suplier", suplier) :
                new ObjectParameter("Suplier", typeof(string));
    
            var nameSupParameter = nameSup != null ?
                new ObjectParameter("NameSup", nameSup) :
                new ObjectParameter("NameSup", typeof(string));
    
            var addressSupParameter = addressSup != null ?
                new ObjectParameter("AddressSup", addressSup) :
                new ObjectParameter("AddressSup", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_Suplier", suplierParameter, nameSupParameter, addressSupParameter, phoneParameter, emailParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    }
}
